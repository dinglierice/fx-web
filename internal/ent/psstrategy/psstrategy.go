// Code generated by ent, DO NOT EDIT.

package psstrategy

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the psstrategy type in the database.
	Label = "ps_strategy"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldOwner holds the string denoting the owner field in the database.
	FieldOwner = "owner"
	// FieldScriptContent holds the string denoting the script_content field in the database.
	FieldScriptContent = "script_content"
	// FieldIsDelete holds the string denoting the is_delete field in the database.
	FieldIsDelete = "is_delete"
	// Table holds the table name of the psstrategy in the database.
	Table = "ps_strategies"
)

// Columns holds all SQL columns for psstrategy fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldOwner,
	FieldScriptContent,
	FieldIsDelete,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultIsDelete holds the default value on creation for the "is_delete" field.
	DefaultIsDelete int
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(uint64) error
)

// OrderOption defines the ordering options for the PsStrategy queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByOwner orders the results by the owner field.
func ByOwner(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOwner, opts...).ToFunc()
}

// ByScriptContent orders the results by the script_content field.
func ByScriptContent(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldScriptContent, opts...).ToFunc()
}

// ByIsDelete orders the results by the is_delete field.
func ByIsDelete(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsDelete, opts...).ToFunc()
}
